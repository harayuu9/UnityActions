name: UnityTest

on: 
  pull_request:
  workflow_dispatch: 

env:
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  build-unity:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}

      # Cache
      - name: Cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library
          restore-keys: |
            Library-

      - name: Run EditMode and PlayMode Test
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2020 }}
        with:
          projectPath: ./
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: 2020.1.5f1

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results
          path: artifacts

      # テスト成功時はこちらのステップが実行される
      - name: Slack Notification on Success
        if: success()
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_CHANNEL: test
          SLACK_TITLE: Test Success
          SLACK_COLOR: good

      # テスト失敗時はこちらのステップが実行される
      - name: Slack Notification on Failure
        uses: rtCamp/action-slack-notify@v2.0.2
        if: failure()
        env:
          SLACK_CHANNEL: test
          SLACK_TITLE: Test Failure
          SLACK_COLOR: danger

      - name: git setting
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "actions"

      - name: merge pull request
        uses: actions/github-script@0.4.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            })